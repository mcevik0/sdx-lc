# coding: utf-8

from __future__ import absolute_import

from datetime import date, datetime  # noqa: F401
from typing import Dict, List  # noqa: F401

from swagger_server import util
from swagger_server.models.base_model_ import Model


class Service(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(
        self,
        monitoring_capability: str = None,
        owner: str = None,
        private_attributes: List[str] = None,
        provisioning_system: str = None,
        provisioning_url: str = None,
        vendor: List[str] = None,
    ):  # noqa: E501
        """Service - a model defined in Swagger

        :param monitoring_capability: The monitoring_capability of this Service.  # noqa: E501
        :type monitoring_capability: str
        :param owner: The owner of this Service.  # noqa: E501
        :type owner: str
        :param private_attributes: The private_attributes of this Service.  # noqa: E501
        :type private_attributes: List[str]
        :param provisioning_system: The provisioning_system of this Service.  # noqa: E501
        :type provisioning_system: str
        :param provisioning_url: The provisioning_url of this Service.  # noqa: E501
        :type provisioning_url: str
        :param vendor: The vendor of this Service.  # noqa: E501
        :type vendor: List[str]
        """
        self.swagger_types = {
            "monitoring_capability": str,
            "owner": str,
            "private_attributes": List[str],
            "provisioning_system": str,
            "provisioning_url": str,
            "vendor": List[str],
        }

        self.attribute_map = {
            "monitoring_capability": "monitoring_capability",
            "owner": "owner",
            "private_attributes": "private_attributes",
            "provisioning_system": "provisioning_system",
            "provisioning_url": "provisioning_url",
            "vendor": "vendor",
        }
        self._monitoring_capability = monitoring_capability
        self._owner = owner
        self._private_attributes = private_attributes
        self._provisioning_system = provisioning_system
        self._provisioning_url = provisioning_url
        self._vendor = vendor

    @classmethod
    def from_dict(cls, dikt) -> "Service":
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The service of this Service.  # noqa: E501
        :rtype: Service
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitoring_capability(self) -> str:
        """Gets the monitoring_capability of this Service.


        :return: The monitoring_capability of this Service.
        :rtype: str
        """
        return self._monitoring_capability

    @monitoring_capability.setter
    def monitoring_capability(self, monitoring_capability: str):
        """Sets the monitoring_capability of this Service.


        :param monitoring_capability: The monitoring_capability of this Service.
        :type monitoring_capability: str
        """

        self._monitoring_capability = monitoring_capability

    @property
    def owner(self) -> str:
        """Gets the owner of this Service.


        :return: The owner of this Service.
        :rtype: str
        """
        return self._owner

    @owner.setter
    def owner(self, owner: str):
        """Sets the owner of this Service.


        :param owner: The owner of this Service.
        :type owner: str
        """

        self._owner = owner

    @property
    def private_attributes(self) -> List[str]:
        """Gets the private_attributes of this Service.


        :return: The private_attributes of this Service.
        :rtype: List[str]
        """
        return self._private_attributes

    @private_attributes.setter
    def private_attributes(self, private_attributes: List[str]):
        """Sets the private_attributes of this Service.


        :param private_attributes: The private_attributes of this Service.
        :type private_attributes: List[str]
        """

        self._private_attributes = private_attributes

    @property
    def provisioning_system(self) -> str:
        """Gets the provisioning_system of this Service.


        :return: The provisioning_system of this Service.
        :rtype: str
        """
        return self._provisioning_system

    @provisioning_system.setter
    def provisioning_system(self, provisioning_system: str):
        """Sets the provisioning_system of this Service.


        :param provisioning_system: The provisioning_system of this Service.
        :type provisioning_system: str
        """

        self._provisioning_system = provisioning_system

    @property
    def provisioning_url(self) -> str:
        """Gets the provisioning_url of this Service.


        :return: The provisioning_url of this Service.
        :rtype: str
        """
        return self._provisioning_url

    @provisioning_url.setter
    def provisioning_url(self, provisioning_url: str):
        """Sets the provisioning_url of this Service.


        :param provisioning_url: The provisioning_url of this Service.
        :type provisioning_url: str
        """

        self._provisioning_url = provisioning_url

    @property
    def vendor(self) -> List[str]:
        """Gets the vendor of this Service.


        :return: The vendor of this Service.
        :rtype: List[str]
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor: List[str]):
        """Sets the vendor of this Service.


        :param vendor: The vendor of this Service.
        :type vendor: List[str]
        """

        self._vendor = vendor
